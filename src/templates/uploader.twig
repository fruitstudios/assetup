{% import "assetup/_macros" as macros %}

{% set uploader = uploader ?? false %}

{% if uploader and not uploader.hasErrors() %}

    {% set classes = [
        'assetup--uploader',
        'assetup--layout-' ~ uploader.layout,
        uploader.enableReorder ? 'assetup--reorderEnabled' : null,
        uploader.customClass ? uploader.customClass : null,
    ]|filter|join(' ') %}

    {# TODO: Assets - if assets|length is greater than limit, should i remove assets?  #}

    <div id="{{ uploader.id }}" class="{{ classes }}">

        {% if uploader.name %}
            <input type="hidden" name="{{ uploader.name|replace({'[]': ''}) }}" value="" />
        {% endif %}

        <ul id="{{ uploader.id }}Assets" class="assetup--assets">

            {% for asset in uploader.assets %}

                {{ macros.preview({
                    asset: asset,
                    name: uploader.name,
                    transform: uploader.transform,
                    enableReorder: uploader.enableReorder,
                    enableRemove: uploader.enableRemove,
                    preview: uploader.preview
                }) }}

            {% endfor %}


            <li class="assetup--controls{{ uploader.limit and uploader.assets|length >= uploader.limit ? ' assetup--isHidden' }}">

                <div class="assetup--controls-inner">

                    <a href="javascript:;" class="assetup--upload">
                       {#  {{ macros.icon({ icon: 'upload' }) }} #}
                        <span class="assetup--label">{{ uploader.selectText }}</span>
                        {% if uploader.enableDropToUpload %}
                            <span class="assetup--or">{{ 'or'|t('assetup') }}</span>
                            <span class="assetup--btn">{{ uploader.dropText }}</span>
                        {% endif %}
                    </a>

                    <input type="file" name="assetUpAssetInput" style="display:none;"{{ not uploader.limit or uploader.limit > 1 ? ' multiple' }} />

                </div>
            </li>

        </ul>

        <div class="assetup--errors assetup--isHidden"></div>

        <div class="assetup--progress assetup--isHidden">
            {{ 'Uploading...'|t('assetup') }} <span class="assetup--uploadPercent">0</span>%
        </div>

        <div class="assetup--overlay assetup--isHidden"></div>

    </div>

{% else %}

    <div class="assetup--notice">
        {% if uploader.hasErrors() %}
            <p>{{ 'Uploader Not Ready'|t('assetup') }}</p>
            <ul class="assetup--noticeErrors">
                {% for error in uploader.getErrors() %}
                    <li>{{ error|filter|join(', ') }}</li>
                {% endfor %}
            </ul>
        {% else %}
            <p>{{ 'Uploader Not Found'|t('assetup') }}</p>
        {% endif %}
    </div>

{% endif %}






{#
{% set types = ['files', 'images'] %}
{% set type = type ?? types[0] %}

{% set source = source ?? '' %}
{% set folder = folder ?? '' %}
{% set elementId = elementId ?? '' %}
{% set fieldId = fieldId ?? '' %}

{% set views = ['image', 'background', 'file'] %}
{% set view = view ?? views[0] %}
{% set transform = transform ?? 'defaultAssetUpload' %}

{% set name = name ?? false %}
{% set asset = asset ?? false %}
{% set title = title ?? 'Upload Asset' %}
{% set subTitle = subTitle ?? false %}
{% set icon = icon ?? 'file-up' %}
{% set allowDelete = allowDelete ?? false %}
{% set square = square ?? false %}

{% set classes = [
    'asset-field',
    'asset-field--view-'~view,
    (inputClass ?? null),
    ( asset ? 'has-asset' : null ),
    'js-assetField'
]|filter|join(' ') %}

<div class="{{ classes }}">

    {% if allowDelete %}
        <span class="asset-field--delete js-assetFieldDelete">
            {{ macros.icon('close') }}
        </span>
    {% endif %}

    <div class="asset-field--preview js-assetFieldPreview">

        {% switch view %}

            {% case 'background' %}

                <div class="asset-field--assetPreview image--margin js-assetPreview" style="background-image: url( '{{ asset ? asset.url(transform) }}' );" data-view="{{ view }}"></div>

            {% case 'image' %}

                <div class="asset-field--assetPreview js-assetPreview" data-view="{{ view }}">
                    <img src="{{ asset ? asset.url(transform) }}" />
                </div>

            {% case 'file' %}

                <div class="asset-field--assetPreview js-assetPreview" data-view="{{ view }}">
                    {{ macros.icon('file')}}
                    <p class="asset-field--assetFilename js-assetFilename">{{ asset.filename ?? '' }}</p>
                </div>

        {% endswitch %}

    </div>

    <div class="asset-field--action js-assetFieldAction">

        <a href="javascript:;" class="placeholder{{ square ? ' placeholder--square' : '' }} js-uploadAsset">
            <div class="placeholder-inner">
                {% if icon %}
                    {{ macros.icon(icon) }}
                {% endif %}
                <p class="placeholder-title">{{ title ?? '' }}</p>
                {% if subTitle ?? false %}<p class="placeholder-subtitle">{{ subTitle }}</p>{% endif %}
                <p class="or">or</p>
                <span class="btn btn--secondary">Browse files</span>
            </div>
        </a>
        <input type="file" name="assetInput" style="display:none;"
            data-element-id="{{ elementId }}"
            data-field-id="{{ fieldId }}"
            data-folder="{{ folder }}"
            data-source="{{ source }}"
            data-transform="{{ transform }}" >

    </div>

    {{ macros.text({
        inputClass: 'asset-field--input js-assetInput',
        name: name ? name|replace({'[]': ''})~(asset ? '[]'),
        type: 'hidden',
        value: asset.id ?? ''
    }) }}

</div>
 #}
